{"ast":null,"code":"// import React, { useState } from 'react';\n\n// export default function SignupForm() {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: ''\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       console.log('Attempting signup:', { email: formData.email });\n\n//       // FIXED: Changed to /api/signup to match your backend\n//       const response = await fetch('http://localhost:5000/api/signup', {\n//         method: 'POST',\n//         headers: { \n//           'Content-Type': 'application/json',\n//           'Accept': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           email: formData.email,\n//           password: formData.password\n//         })\n//       });\n\n//       console.log('Response status:', response.status);\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert('Signup successful!');\n//         console.log('User data:', data.user);\n//         setFormData({ email: '', password: '' });\n//         // Redirect to dashboard or login page here\n//       } else {\n//         alert(`Signup failed: ${data.error}`);\n//       }\n\n//     } catch (error) {\n//       console.error('Signup error:', error);\n//       alert(`Error: ${error.message}\\n\\nMake sure:\\n1. Backend is running on port 5000\\n2. MongoDB is connected\\n3. Network is available`);\n//     }\n//   };\n\n//   const handleSocialSignup = (provider) => {\n//     console.log(`${provider} signup clicked`);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\n//         {/* Sign up */}\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\n//           Sign up\n//         </h2>\n\n//         {/* Social Buttons */}\n//         <div className=\"flex gap-4 justify-center mb-6\">\n//           <button\n//             onClick={() => handleSocialSignup('Google')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\n//               alt=\"Google\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Google</span>\n//           </button>\n\n//           <button\n//             onClick={() => handleSocialSignup('Facebook')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\n//               alt=\"Facebook\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Facebook</span>\n//           </button>\n//         </div>\n\n//         {/* Divider */}\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\n\n//         {/* Signup Form */}\n//         <form onSubmit={handleSubmit} className=\"flex flex-col\">\n//           {/* Email label */}\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             placeholder=\"Enter your email\"\n//             required\n//           />\n\n//           {/* Password label */}\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Password\n//           </label>\n\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             placeholder=\"Enter your password\"\n//             required\n//           />\n\n//           {/* Signup button */}\n//           <button\n//             type=\"submit\"\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600\"\n//           >\n//             Sign Up\n//           </button>\n//         </form>\n\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\n//           Already have an account?{' '}\n//           <button\n//             type=\"button\"\n//             onClick={() => console.log('Log in clicked')}\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\n//           >\n//             Log In\n//           </button>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// otp on terminal\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function SignupForm() {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: '',\n//     otp: '' // 👈 Added OTP field\n//   });\n//   const [showOTPField, setShowOTPField] = useState(false); // 👈 New state\n//   const navigate = useNavigate();\n\n//   // Keep your original handleChange\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Modified handleSubmit for OTP flow\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!showOTPField) {\n//       // Step 1: Send OTP\n//       try {\n//         const response = await fetch('http://localhost:5000/api/send-otp', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify({ email: formData.email })\n//         });\n\n//         if (response.ok) {\n//           alert('OTP sent to your email!');\n//           setShowOTPField(true); // 👈 Show OTP field\n//         } else {\n//           alert('Failed to send OTP');\n//         }\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     } else {\n//       // Step 2: Verify OTP and Signup\n//       try {\n//         const response = await fetch('http://localhost:5000/api/signup', {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify({\n//             email: formData.email,\n//             password: formData.password,\n//             otp: formData.otp\n//           })\n//         });\n\n//         const data = await response.json();\n//         if (response.ok) {\n//           alert('Signup successful!');\n//           navigate('/home'); // 👈 Redirect on success\n//         } else {\n//           alert(data.error || 'Signup failed');\n//         }\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   // Your original JSX (only add OTP field conditionally)\n//   return (\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\n//         {/* Keep all your original UI elements exactly as is */}\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\n//           Sign up\n//         </h2>\n\n//         {/* Social Buttons (unchanged) */}\n//         <div className=\"flex gap-4 justify-center mb-6\">\n//           <button\n//             onClick={() => console.log('Google signup clicked')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\n//               alt=\"Google\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Google</span>\n//           </button>\n\n//           <button\n//             onClick={() => console.log('Facebook signup clicked')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\n//               alt=\"Facebook\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Facebook</span>\n//           </button>\n//         </div>\n\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\n\n//         <form onSubmit={handleSubmit} className=\"flex flex-col\">\n//           {/* Email field (unchanged) */}\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             placeholder=\"Enter your email\"\n//             required\n//             disabled={showOTPField}\n//           />\n\n//           {/* Password field (unchanged) */}\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Password\n//           </label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//             placeholder=\"Enter your password\"\n//             required\n//             disabled={showOTPField}\n//           />\n\n//           {/* 👇 Only add this OTP field when needed */}\n//           {showOTPField && (\n//             <>\n//               <label htmlFor=\"otp\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//                 OTP\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name=\"otp\"\n//                 value={formData.otp}\n//                 onChange={handleChange}\n//                 className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 required\n//               />\n//             </>\n//           )}\n\n//           {/* Your original signup button (now dynamic) */}\n//           <button\n//             type=\"submit\"\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600\"\n//           >\n//             {showOTPField ? 'Verify OTP' : 'Sign Up'}\n//           </button>\n//         </form>\n\n//         {/* Keep your existing \"Already have an account?\" link */}\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\n//           Already have an account?{' '}\n//           <button\n//             type=\"button\"\n//             onClick={() => console.log('Log in clicked')}\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\n//           >\n//             Log In\n//           </button>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// otp on email\n\n// import React, { useState } from 'react';\n\n// export default function SignupForm() {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: '',\n//     otp: ''\n//   });\n//   const [showOTPField, setShowOTPField] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//     setMessage(''); // Clear any previous messages\n//   };\n\n// // Replace your handleSubmit function with this fixed version\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   setLoading(true);\n//   setMessage('');\n\n//   if (!showOTPField) {\n//     // Step 1: Send OTP (FIXED - only send email)\n//     try {\n//       const response = await fetch('http://localhost:5000/api/send-otp', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email: formData.email }) // Only email\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setMessage('✅ OTP sent to your email! Check your inbox.');\n//         setShowOTPField(true);\n//       } else {\n//         setMessage(`❌ ${data.error || 'Failed to send OTP'}`);\n//       }\n//     } catch (error) {\n//       console.error('Send OTP error:', error);\n//       setMessage('❌ Network error. Please check if backend is running.');\n//     }\n//   } else {\n//     // Step 2: Verify OTP and Complete Signup (FIXED - send all required fields)\n//     try {\n//       const response = await fetch('http://localhost:5000/api/verify-otp', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({\n//           email: formData.email,\n//           password: formData.password,\n//           otp: formData.otp\n//         })\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setMessage('✅ Account created successfully! Redirecting...');\n//         setTimeout(() => {\n//           alert('Welcome! You would be redirected to home page now.');\n//           // In real app: window.location.href = '/home' or use React Router\n//         }, 1500);\n//       } else {\n//         setMessage(`❌ ${data.error || 'Verification failed'}`);\n//       }\n//     } catch (error) {\n//       console.error('Verify OTP error:', error);\n//       setMessage('❌ Network error. Please try again.');\n//     }\n//   }\n\n//   setLoading(false);\n// };\n\n// // Also fix the handleResendOTP function\n// const handleResendOTP = async () => {\n//   setLoading(true);\n//   setMessage('');\n//   try {\n//     const response = await fetch('http://localhost:5000/api/send-otp', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email: formData.email }) // Only email\n//     });\n\n//     const data = await response.json();\n\n//     if (response.ok) {\n//       setMessage('✅ New OTP sent to your email!');\n//     } else {\n//       setMessage(`❌ ${data.error || 'Failed to resend OTP'}`);\n//     }\n//   } catch (error) {\n//     setMessage('❌ Network error. Please try again.');\n//   }\n//   setLoading(false);\n// };\n\n//   const handleBackToEmail = () => {\n//     setShowOTPField(false);\n//     setFormData({ ...formData, otp: '' });\n//     setMessage('');\n//   };\n\n//   const handleSocialSignup = (provider) => {\n//     alert(`${provider} signup clicked - implement OAuth integration`);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\n//           Sign up\n//         </h2>\n\n//         {/* Social Buttons */}\n//         <div className=\"flex gap-4 justify-center mb-6\">\n//           <button\n//             onClick={() => handleSocialSignup('Google')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//             disabled={loading}\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\n//               alt=\"Google\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Google</span>\n//           </button>\n\n//           <button\n//             onClick={() => handleSocialSignup('Facebook')}\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\n//             disabled={loading}\n//           >\n//             <img\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\n//               alt=\"Facebook\"\n//               className=\"w-6 h-6 mr-4\"\n//             />\n//             <span className=\"font-bold text-base\">Facebook</span>\n//           </button>\n//         </div>\n\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\n\n//         {/* Status Message */}\n//         {message && (\n//           <div className={`p-3 mb-4 rounded border text-sm ${\n//             message.includes('✅') \n//               ? 'bg-green-50 border-green-200 text-green-700' \n//               : 'bg-red-50 border-red-200 text-red-700'\n//           }`}>\n//             {message}\n//           </div>\n//         )}\n\n//         <div className=\"flex flex-col\">\n//           {/* Email field */}\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-100\"\n//             placeholder=\"Enter your email\"\n//             required\n//             disabled={showOTPField || loading}\n//           />\n\n//           {/* Password field */}\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//             Password\n//           </label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-100\"\n//             placeholder=\"Enter your password\"\n//             required\n//             disabled={showOTPField || loading}\n//             minLength={6}\n//           />\n\n//           {/* OTP field (conditional) */}\n//           {showOTPField && (\n//             <>\n//               <label htmlFor=\"otp\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\n//                 OTP Code\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 name=\"otp\"\n//                 value={formData.otp}\n//                 onChange={handleChange}\n//                 className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n//                 placeholder=\"Enter 6-digit OTP\"\n//                 required\n//                 maxLength={6}\n//                 disabled={loading}\n//               />\n\n//               {/* OTP Helper buttons */}\n//               <div className=\"flex gap-2 mb-4\">\n//                 <button\n//                   type=\"button\"\n//                   onClick={handleResendOTP}\n//                   className=\"text-sm text-blue-600 hover:underline disabled:text-gray-400\"\n//                   disabled={loading}\n//                 >\n//                   Resend OTP\n//                 </button>\n//                 <span className=\"text-gray-300\">|</span>\n//                 <button\n//                   type=\"button\"\n//                   onClick={handleBackToEmail}\n//                   className=\"text-sm text-gray-600 hover:underline disabled:text-gray-400\"\n//                   disabled={loading}\n//                 >\n//                   Change Email\n//                 </button>\n//               </div>\n//             </>\n//           )}\n\n//           {/* Submit button */}\n//           <button\n//             onClick={handleSubmit}\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n//             disabled={loading}\n//           >\n//             {loading \n//               ? '⏳ Processing...' \n//               : showOTPField \n//                 ? '✅ Verify OTP' \n//                 : '📧 Send OTP'\n//             }\n//           </button>\n//         </div>\n\n//         {/* Login link */}\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\n//           Already have an account?{' '}\n//           <button\n//             type=\"button\"\n//             onClick={() => alert('Navigate to login page')}\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\n//           >\n//             Log In\n//           </button>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Pavan/Desktop/smalltalk/frontend/src/components/signup/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// export default function SignupForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     try {\r\n//       console.log('Attempting signup:', { email: formData.email });\r\n      \r\n//       // FIXED: Changed to /api/signup to match your backend\r\n//       const response = await fetch('http://localhost:5000/api/signup', {\r\n//         method: 'POST',\r\n//         headers: { \r\n//           'Content-Type': 'application/json',\r\n//           'Accept': 'application/json'\r\n//         },\r\n//         body: JSON.stringify({\r\n//           email: formData.email,\r\n//           password: formData.password\r\n//         })\r\n//       });\r\n\r\n//       console.log('Response status:', response.status);\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       if (response.ok) {\r\n//         alert('Signup successful!');\r\n//         console.log('User data:', data.user);\r\n//         setFormData({ email: '', password: '' });\r\n//         // Redirect to dashboard or login page here\r\n//       } else {\r\n//         alert(`Signup failed: ${data.error}`);\r\n//       }\r\n\r\n//     } catch (error) {\r\n//       console.error('Signup error:', error);\r\n//       alert(`Error: ${error.message}\\n\\nMake sure:\\n1. Backend is running on port 5000\\n2. MongoDB is connected\\n3. Network is available`);\r\n//     }\r\n//   };\r\n\r\n//   const handleSocialSignup = (provider) => {\r\n//     console.log(`${provider} signup clicked`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\r\n//         {/* Sign up */}\r\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\r\n//           Sign up\r\n//         </h2>\r\n\r\n//         {/* Social Buttons */}\r\n//         <div className=\"flex gap-4 justify-center mb-6\">\r\n//           <button\r\n//             onClick={() => handleSocialSignup('Google')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\r\n//               alt=\"Google\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Google</span>\r\n//           </button>\r\n\r\n//           <button\r\n//             onClick={() => handleSocialSignup('Facebook')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\r\n//               alt=\"Facebook\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Facebook</span>\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Divider */}\r\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\r\n\r\n//         {/* Signup Form */}\r\n//         <form onSubmit={handleSubmit} className=\"flex flex-col\">\r\n//           {/* Email label */}\r\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Email\r\n//           </label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             placeholder=\"Enter your email\"\r\n//             required\r\n//           />\r\n\r\n//           {/* Password label */}\r\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Password\r\n//           </label>\r\n          \r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             placeholder=\"Enter your password\"\r\n//             required\r\n//           />\r\n\r\n//           {/* Signup button */}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600\"\r\n//           >\r\n//             Sign Up\r\n//           </button>\r\n//         </form>\r\n\r\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\r\n//           Already have an account?{' '}\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => console.log('Log in clicked')}\r\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\r\n//           >\r\n//             Log In\r\n//           </button>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// otp on terminal\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// export default function SignupForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//     otp: '' // 👈 Added OTP field\r\n//   });\r\n//   const [showOTPField, setShowOTPField] = useState(false); // 👈 New state\r\n//   const navigate = useNavigate();\r\n\r\n//   // Keep your original handleChange\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   // Modified handleSubmit for OTP flow\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!showOTPField) {\r\n//       // Step 1: Send OTP\r\n//       try {\r\n//         const response = await fetch('http://localhost:5000/api/send-otp', {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify({ email: formData.email })\r\n//         });\r\n        \r\n//         if (response.ok) {\r\n//           alert('OTP sent to your email!');\r\n//           setShowOTPField(true); // 👈 Show OTP field\r\n//         } else {\r\n//           alert('Failed to send OTP');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     } else {\r\n//       // Step 2: Verify OTP and Signup\r\n//       try {\r\n//         const response = await fetch('http://localhost:5000/api/signup', {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify({\r\n//             email: formData.email,\r\n//             password: formData.password,\r\n//             otp: formData.otp\r\n//           })\r\n//         });\r\n\r\n//         const data = await response.json();\r\n//         if (response.ok) {\r\n//           alert('Signup successful!');\r\n//           navigate('/home'); // 👈 Redirect on success\r\n//         } else {\r\n//           alert(data.error || 'Signup failed');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Your original JSX (only add OTP field conditionally)\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\r\n//         {/* Keep all your original UI elements exactly as is */}\r\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\r\n//           Sign up\r\n//         </h2>\r\n\r\n//         {/* Social Buttons (unchanged) */}\r\n//         <div className=\"flex gap-4 justify-center mb-6\">\r\n//           <button\r\n//             onClick={() => console.log('Google signup clicked')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\r\n//               alt=\"Google\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Google</span>\r\n//           </button>\r\n\r\n//           <button\r\n//             onClick={() => console.log('Facebook signup clicked')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\r\n//               alt=\"Facebook\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Facebook</span>\r\n//           </button>\r\n//         </div>\r\n\r\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"flex flex-col\">\r\n//           {/* Email field (unchanged) */}\r\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Email\r\n//           </label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             placeholder=\"Enter your email\"\r\n//             required\r\n//             disabled={showOTPField}\r\n//           />\r\n\r\n//           {/* Password field (unchanged) */}\r\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Password\r\n//           </label>\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//             placeholder=\"Enter your password\"\r\n//             required\r\n//             disabled={showOTPField}\r\n//           />\r\n\r\n//           {/* 👇 Only add this OTP field when needed */}\r\n//           {showOTPField && (\r\n//             <>\r\n//               <label htmlFor=\"otp\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//                 OTP\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"otp\"\r\n//                 value={formData.otp}\r\n//                 onChange={handleChange}\r\n//                 className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//                 placeholder=\"Enter 6-digit OTP\"\r\n//                 required\r\n//               />\r\n//             </>\r\n//           )}\r\n\r\n//           {/* Your original signup button (now dynamic) */}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600\"\r\n//           >\r\n//             {showOTPField ? 'Verify OTP' : 'Sign Up'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {/* Keep your existing \"Already have an account?\" link */}\r\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\r\n//           Already have an account?{' '}\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => console.log('Log in clicked')}\r\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\r\n//           >\r\n//             Log In\r\n//           </button>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// otp on email\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// export default function SignupForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//     otp: ''\r\n//   });\r\n//   const [showOTPField, setShowOTPField] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//     setMessage(''); // Clear any previous messages\r\n//   };\r\n\r\n// // Replace your handleSubmit function with this fixed version\r\n\r\n// const handleSubmit = async (e) => {\r\n//   e.preventDefault();\r\n//   setLoading(true);\r\n//   setMessage('');\r\n  \r\n//   if (!showOTPField) {\r\n//     // Step 1: Send OTP (FIXED - only send email)\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/send-otp', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ email: formData.email }) // Only email\r\n//       });\r\n      \r\n//       const data = await response.json();\r\n      \r\n//       if (response.ok) {\r\n//         setMessage('✅ OTP sent to your email! Check your inbox.');\r\n//         setShowOTPField(true);\r\n//       } else {\r\n//         setMessage(`❌ ${data.error || 'Failed to send OTP'}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Send OTP error:', error);\r\n//       setMessage('❌ Network error. Please check if backend is running.');\r\n//     }\r\n//   } else {\r\n//     // Step 2: Verify OTP and Complete Signup (FIXED - send all required fields)\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/verify-otp', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({\r\n//           email: formData.email,\r\n//           password: formData.password,\r\n//           otp: formData.otp\r\n//         })\r\n//       });\r\n\r\n//       const data = await response.json();\r\n      \r\n//       if (response.ok) {\r\n//         setMessage('✅ Account created successfully! Redirecting...');\r\n//         setTimeout(() => {\r\n//           alert('Welcome! You would be redirected to home page now.');\r\n//           // In real app: window.location.href = '/home' or use React Router\r\n//         }, 1500);\r\n//       } else {\r\n//         setMessage(`❌ ${data.error || 'Verification failed'}`);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Verify OTP error:', error);\r\n//       setMessage('❌ Network error. Please try again.');\r\n//     }\r\n//   }\r\n  \r\n//   setLoading(false);\r\n// };\r\n\r\n// // Also fix the handleResendOTP function\r\n// const handleResendOTP = async () => {\r\n//   setLoading(true);\r\n//   setMessage('');\r\n//   try {\r\n//     const response = await fetch('http://localhost:5000/api/send-otp', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ email: formData.email }) // Only email\r\n//     });\r\n    \r\n//     const data = await response.json();\r\n    \r\n//     if (response.ok) {\r\n//       setMessage('✅ New OTP sent to your email!');\r\n//     } else {\r\n//       setMessage(`❌ ${data.error || 'Failed to resend OTP'}`);\r\n//     }\r\n//   } catch (error) {\r\n//     setMessage('❌ Network error. Please try again.');\r\n//   }\r\n//   setLoading(false);\r\n// };\r\n\r\n//   const handleBackToEmail = () => {\r\n//     setShowOTPField(false);\r\n//     setFormData({ ...formData, otp: '' });\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleSocialSignup = (provider) => {\r\n//     alert(`${provider} signup clicked - implement OAuth integration`);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\r\n//       <div className=\"bg-white p-8 rounded-lg w-full max-w-lg shadow-lg\">\r\n//         <h2 className=\"text-left mb-8 text-4xl font-extrabold text-gray-800\">\r\n//           Sign up\r\n//         </h2>\r\n\r\n//         {/* Social Buttons */}\r\n//         <div className=\"flex gap-4 justify-center mb-6\">\r\n//           <button\r\n//             onClick={() => handleSocialSignup('Google')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//             disabled={loading}\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/2702/2702602.png\"\r\n//               alt=\"Google\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Google</span>\r\n//           </button>\r\n\r\n//           <button\r\n//             onClick={() => handleSocialSignup('Facebook')}\r\n//             className=\"flex items-center justify-center px-8 py-2 border-2 border-gray-300 rounded-md text-sm text-black bg-gray-100 min-w-[120px] h-10 transition-all duration-200 hover:bg-gray-200 hover:scale-105\"\r\n//             disabled={loading}\r\n//           >\r\n//             <img\r\n//               src=\"https://cdn-icons-png.flaticon.com/512/5968/5968764.png\"\r\n//               alt=\"Facebook\"\r\n//               className=\"w-6 h-6 mr-4\"\r\n//             />\r\n//             <span className=\"font-bold text-base\">Facebook</span>\r\n//           </button>\r\n//         </div>\r\n\r\n//         <p className=\"text-center text-sm font-bold my-6\">or</p>\r\n\r\n//         {/* Status Message */}\r\n//         {message && (\r\n//           <div className={`p-3 mb-4 rounded border text-sm ${\r\n//             message.includes('✅') \r\n//               ? 'bg-green-50 border-green-200 text-green-700' \r\n//               : 'bg-red-50 border-red-200 text-red-700'\r\n//           }`}>\r\n//             {message}\r\n//           </div>\r\n//         )}\r\n\r\n//         <div className=\"flex flex-col\">\r\n//           {/* Email field */}\r\n//           <label htmlFor=\"email\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Email\r\n//           </label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-100\"\r\n//             placeholder=\"Enter your email\"\r\n//             required\r\n//             disabled={showOTPField || loading}\r\n//           />\r\n\r\n//           {/* Password field */}\r\n//           <label htmlFor=\"password\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//             Password\r\n//           </label>\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-100\"\r\n//             placeholder=\"Enter your password\"\r\n//             required\r\n//             disabled={showOTPField || loading}\r\n//             minLength={6}\r\n//           />\r\n\r\n//           {/* OTP field (conditional) */}\r\n//           {showOTPField && (\r\n//             <>\r\n//               <label htmlFor=\"otp\" className=\"text-base font-bold text-gray-600 mb-3 ml-2\">\r\n//                 OTP Code\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"otp\"\r\n//                 value={formData.otp}\r\n//                 onChange={handleChange}\r\n//                 className=\"p-3 mb-4 rounded border border-gray-300 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//                 placeholder=\"Enter 6-digit OTP\"\r\n//                 required\r\n//                 maxLength={6}\r\n//                 disabled={loading}\r\n//               />\r\n              \r\n//               {/* OTP Helper buttons */}\r\n//               <div className=\"flex gap-2 mb-4\">\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={handleResendOTP}\r\n//                   className=\"text-sm text-blue-600 hover:underline disabled:text-gray-400\"\r\n//                   disabled={loading}\r\n//                 >\r\n//                   Resend OTP\r\n//                 </button>\r\n//                 <span className=\"text-gray-300\">|</span>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={handleBackToEmail}\r\n//                   className=\"text-sm text-gray-600 hover:underline disabled:text-gray-400\"\r\n//                   disabled={loading}\r\n//                 >\r\n//                   Change Email\r\n//                 </button>\r\n//               </div>\r\n//             </>\r\n//           )}\r\n\r\n//           {/* Submit button */}\r\n//           <button\r\n//             onClick={handleSubmit}\r\n//             className=\"p-2 h-12 bg-gray-800 text-white text-lg font-bold border-none rounded cursor-pointer mt-3 transition-colors duration-300 ease-in-out hover:bg-purple-600 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n//             disabled={loading}\r\n//           >\r\n//             {loading \r\n//               ? '⏳ Processing...' \r\n//               : showOTPField \r\n//                 ? '✅ Verify OTP' \r\n//                 : '📧 Send OTP'\r\n//             }\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Login link */}\r\n//         <p className=\"text-center text-base font-semibold mt-5 text-gray-600\">\r\n//           Already have an account?{' '}\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => alert('Navigate to login page')}\r\n//             className=\"text-blue-600 no-underline hover:underline bg-transparent border-none cursor-pointer p-0\"\r\n//           >\r\n//             Log In\r\n//           </button>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAoDA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAyignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}